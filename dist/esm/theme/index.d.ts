import React, { PropsWithChildren, FC } from 'react';
import { ThemeType } from '../types';
export declare type StylesFn = <T extends ThemeType>(theme: T) => Record<string, unknown>;
declare const GalioTheme: {
    COLORS: {
        FACEBOOK: string;
        TWITTER: string;
        DRIBBBLE: string;
        BODY: string;
        THEME: string;
        PRIMARY: string;
        DARK_PRIMARY: string;
        LIGHT_PRIMARY: string;
        BRIGHT_PRIMARY: string;
        INFO: string;
        DARK_INFO: string;
        LIGHT_INFO: string;
        BRIGHT_INFO: string;
        DANGER: string;
        DARK_DANGER: string;
        LIGHT_DANGER: string;
        BRIGHT_DANGER: string;
        WARNING: string;
        DARK_WARNING: string;
        LIGHT_WARNING: string;
        BRIGHT_WARNING: string;
        SUCCESS: string;
        DARK_SUCCESS: string;
        LIGHT_SUCCESS: string;
        BRIGHT_SUCCESS: string;
        WHITE: string;
        DARK_BLACK: string;
        BLACK: string;
        BRIGHT_BLACK: string;
        LIGHT_BLACK: string;
        DARK_SECONDARY: string;
        SECONDARY: string;
        BRIGHT_SECONDARY: string;
        LIGHT_SECONDARY: string;
        DARK_GREY: string;
        GREY: string;
        BRIGHT_GREY: string;
        LIGHT_GREY: string;
        NEUTRAL: string;
        INPUT: string;
        PLACEHOLDER: string;
        NAVBAR: string;
        BLOCK: string;
        ICON: string;
        MUTED: string;
        TRANSPARENT: string;
    };
    SIZES: {
        BASE: number;
        FONT: number;
        OPACITY: number;
        BORDER_RADIUS: number;
        BORDER_WIDTH: number;
        H1: number;
        H2: number;
        H3: number;
        H4: number;
        H5: number;
        H6: number;
        BODY: number;
        SMALL: number;
        ICON: number;
        ICON_MEDIUM: number;
        ICON_LARGE: number;
        BUTTON_WIDTH: number;
        BUTTON_HEIGHT: number;
        BUTTON_SHADOW_RADIUS: number;
        BLOCK_SHADOW_OPACITY: number;
        BLOCK_SHADOW_RADIUS: number;
        ANDROID_ELEVATION: number;
        CARD_BORDER_RADIUS: number;
        CARD_BORDER_WIDTH: number;
        CARD_WIDTH: number;
        CARD_MARGIN_VERTICAL: number;
        CARD_FOOTER_HORIZONTAL: number;
        CARD_FOOTER_VERTICAL: number;
        CARD_AVATAR_WIDTH: number;
        CARD_AVATAR_HEIGHT: number;
        CARD_AVATAR_RADIUS: number;
        CARD_IMAGE_HEIGHT: number;
        CARD_ROUND: number;
        CARD_ROUNDED: number;
        INPUT_BORDER_RADIUS: number;
        INPUT_BORDER_WIDTH: number;
        INPUT_HEIGHT: number;
        INPUT_HORIZONTAL: number;
        INPUT_VERTICAL_TEXT: number;
        INPUT_VERTICAL_LABEL: number;
        INPUT_TEXT: number;
        INPUT_ROUNDED: number;
        NAVBAR_HEIGHT: number;
        NAVBAR_VERTICAL: number;
        NAVBAR_TITLE_FLEX: number;
        NAVBAR_TITLE_HEIGHT: number;
        NAVBAR_TITLE_TEXT: number;
        NAVBAR_LEFT_FLEX: number;
        NAVBAR_LEFT_HEIGHT: number;
        NAVBAR_LEFT_MARGIN: number;
        NAVBAR_RIGHT_FLEX: number;
        NAVBAR_RIGHT_HEIGHT: number;
        NAVBAR_RIGHT_MARGIN: number;
        CHECKBOX_WIDTH: number;
        CHECKBOX_HEIGHT: number;
        TRACK_SIZE: number;
        THUMB_SIZE: number;
        RADIO_WIDTH: number;
        RADIO_HEIGHT: number;
        RADIO_THICKNESS: number;
    };
};
/**
 * useGalioTheme
 * Galio custom hook which returns the theme object
 */
export declare function useGalioTheme(): ThemeType;
export declare const withGalio: <P extends Record<string, any>, S extends StylesFn = StylesFn>(Component: React.FC<P>, styles?: S) => React.FC<P>;
export declare function GalioProvider<T extends ThemeType & {
    customTheme?: Record<string, any>;
}>({ theme, children, }: PropsWithChildren<{
    theme: T;
}>): JSX.Element;
export default GalioTheme;
